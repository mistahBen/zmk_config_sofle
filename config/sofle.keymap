#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   //   10
        };
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1  &kp N2            &kp N3         &kp N4        &kp N5                           &kp NUMBER_6  &kp N7  &kp N8           &kp N9      &kp NUMBER_0   &kp BACKSPACE
&kp TAB         &kp Q   &kp W             &kp E          &kp R         &kp T                            &kp Y         &kp U   &kp I            &kp O       &kp P          &kp BSLH
&kp CAPSLOCK    &kp A   &kp S             &kp D          &kp F         &kp G                            &kp H         &kp J   &kp K            &kp L       &kp SEMICOLON  &kp SQT
&kp LEFT_SHIFT  &kp Z   &kp X             &kp C          &kp Z         &kp V   &kp K_MUTE    &kp RET    &kp N         &kp M   &kp COMMA        &kp PERIOD  &kp SLASH      &kp RET
                        &kp LEFT_CONTROL  &kp LEFT_META  &kp LEFT_ALT  &mo 1   &kp SPACE     &kp SPACE  &kp RET       &mo 2   &kp RIGHT_SHIFT  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp F1            &kp F2             &kp F3     &kp F4           &kp F5                                              &kp F6           &kp F7           &kp F8           &kp F9           &kp F10           &trans
&trans     &trans            &kp GRAVE          &mkp LCLK  &mkp MCLK        &mkp RCLK                                           &kp PAGE_UP      &kp HOME         &kp UP_ARROW     &kp END          &kp MINUS         &kp EQUAL
&kp MINUS  &kp TILDE         &trans             &kp TILDE  &trans           &trans                                              &kp PAGE_DOWN    &kp LEFT_ARROW   &kp DOWN         &kp RIGHT        &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp RIGHT  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &trans     &rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF    &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &mmv MOVE_RIGHT  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &kp F12           &trans
                             &kp F12            &trans     &kp C_MUTE       &trans          &trans             &trans           &trans           &trans           &mkp LCLK        &kp DEL
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4                              &mmv MOVE_UP  &kp F6           &kp F7          &kp F8       &kp F9      &kp F10
&trans     &studio_unlock  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &trans                                    &trans        &mmv MOVE_DOWN   &trans          &trans       &kp F11     &kp F12
&kp UNDER  &kp PLUS        &trans        &out OUT_USB    &out OUT_BLE  &trans                                    &trans        &trans           &mmv MOVE_LEFT  &trans       &trans      &trans
&soft_off  &kp LBRC        &kp RBRC      &trans          &sys_reset    &trans        &bootloader    &bootloader  &trans        &mmv MOVE_RIGHT  &trans          &trans       &sys_reset  &soft_off
                           &bootloader   &trans          &trans        &trans        &trans         &trans       &out OUT_TOG  &trans           &mkp LCLK       &bootloader
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
